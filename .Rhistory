null_model <- glm(Survived ~ 1, data = data, family=binomial)
individual <- tibble(Sex="male", Fare=100)
predict(model, individual)
predict(null_model, individual)
null_model <- glm(Survived ~ 1, data = data, family=binomial)
individual <- tibble(Sex="male", Fare=100)
predict(model, individual, type="response")
predict(null_model, individual, type="response")
null_model <- glm(Survived ~ 1, data = data, family=binomial)
individual <- tibble(Sex="male", Fare=400)
predict(model, individual, type="response")
predict(null_model, individual, type="response")
library(gridExtra)
library(tidyverse)
library(modelr)
model <- glm(Survived ~ Sex + Fare, data = data, family = binomial)
grid <-
data %>%
data_grid(Sex,Fare) %>%
add_predictions(model, type = "response")
data %>%
ggplot() +
geom_point(aes(Fare, Survived, color=factor(Sex)), position='jitter') +
geom_line(aes(Fare, pred, color=factor(Sex)), data = grid) +
labs(y = "Prob. of Survival", x = "Fare", title = "Binomial Regression of Sex and Fare on Survived") +
theme(plot.title = element_text(size=10), axis.text = element_text(size=10), axis.title = element_text(size=10))
tidy(model)
library(broom)
model_1 <- lm(Survived ~ Sex + Fare, data=data)
tidy(model_1)
data %>%
ggplot(aes(x=Fare, y=Survived, color=factor(Sex))) +
geom_point(position = 'jitter', alpha=0.3) +
geom_smooth(method='lm', se=FALSE ) +
ggtitle("Linear Regression of Fare and Sex on Survived") +
ylab("probability of survival")
library(gridExtra)
library(tidyverse)
library(modelr)
model <- glm(Survived ~ Sex + Fare, data = data, family = binomial)
grid <-
data %>%
data_grid(Sex,Fare) %>%
add_predictions(model, type = "response")
data %>%
ggplot() +
geom_point(aes(Fare, Survived, color=factor(Sex)), position='jitter') +
geom_line(aes(Fare, pred, color=factor(Sex)), data = grid) +
labs(y = "Prob. of Survival", x = "Fare", title = "Binomial Regression of Sex and Fare on Survived") +
theme(plot.title = element_text(size=10), axis.text = element_text(size=10), axis.title = element_text(size=10))
tidy(model)
null_model <- glm(Survived ~ 1, data = data, family=binomial)
individual <- tibble(Sex="male", Fare=200)
predict(model, individual, type="response")
predict(null_model, individual, type="response")
null_model <- glm(Survived ~ 1, data = data, family=binomial)
individual <- tibble(Sex=c("male","male","female","female"), Fare=c(100, 200, 100, 200))
predict(model, individual, type="response")
predict(null_model, individual, type="response")
data
sum(data$Survived)
sum(data$Survived)/length(data$Survived)
library(broom)
model_1 <- lm(Survived ~ Sex + Fare, data=data)
tidy(model_1)
scatter<- data %>%
ggplot(aes(x=Fare, y=Survived, color=factor(Sex))) +
geom_point(position = 'jitter', alpha=0.3) +
ggtitle("Linear Regression of Fare and Sex on Survived") +
ylab("probability of survival")
scatter + geom_smooth(method='lm', se=FALSE )
span = 0.3
degree = 2
model_loess <- loess(Survived ~ Sex + Fare, span = span, degree = degree, data = data)
span = 0.25
degree = 3
model_loess <- loess(Survived ~ Sex + Fare, span = span, degree = degree, data = data)
span = 0.25
degree = 1
model_loess <- loess(Survived ~ Sex + Fare, span = span, degree = degree, data = data)
span = 0.25
degree = 0
model_loess <- loess(Survived ~ Sex + Fare, span = span, degree = degree, data = data)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
M_data %>%
add_predictions(male_model_loess)
## Plotting
male_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=24), axis.text = element_text(size=18), axis.title = element_text(size=24)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=24), axis.text = element_text(size=18), axis.title = element_text(size=24)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
M_data %>%
add_predictions(male_model_loess)
## Plotting
male_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(male_model_loess)
## Plotting
male_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <- scatter + #from exercise1_1
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(male_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived, color="skyblue")) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived, color="pink")) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived, color="skyblue")) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived, color="pink")) +
geom_point(position = 'jitter', alpha=0.3) +
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3, color="blue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "skyblue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.3, color="red") +
geom_line(aes(Fare, pred),  data = F_grid, color = "pink") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 1
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.5
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.5
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Male Survival on Fare", "degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Female Survival on Fare", "degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.5
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Loess: Male Survival on Fare ; ", "degree = ", degree, "  span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Loess: Female Survival on Fare ; ", "degree = ", degree, "  span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
span = 0.25
degree = 0
## Split the data
M_data <- data %>% filter(Sex=="male")
F_data <- data %>% filter(Sex=="female")
male_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = M_data)
fem_model_loess <- loess(Survived ~ Fare, span = span, degree = degree, data = F_data)
## Let's create our grid for predictions
M_grid <-
M_data %>%
add_predictions(male_model_loess)
F_grid <-
F_data %>%
add_predictions(fem_model_loess)
## Plotting
male_loess_plot <- M_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="skyblue") +
geom_line(aes(Fare, pred),  data = M_grid, color = "blue") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Loess: Male Survival on Fare ;", "degree = ", degree, "; span = ", span))
fem_loess_plot <-  F_data %>%
ggplot(aes(x=Fare, y=Survived)) +
geom_point(position = 'jitter', alpha=0.4, color="pink") +
geom_line(aes(Fare, pred),  data = F_grid, color = "red") +
theme(plot.title = element_text(size=12), axis.text = element_text(size=10), axis.title = element_text(size=10)) +
ggtitle(paste0("Loess: Female Survival on Fare ;", "degree = ", degree, "; span = ", span))
grid.arrange(male_loess_plot, fem_loess_plot, ncol=1)
library(gridExtra)
library(tidyverse)
library(modelr)
model <- glm(Survived ~ Sex + Fare, data = data, family = binomial)
grid <-
data %>%
data_grid(Sex,Fare) %>%
add_predictions(model, type = "response")
data %>%
ggplot() +
geom_point(aes(Fare, Survived, color=factor(Sex)), position='jitter') +
geom_line(aes(Fare, pred, color=factor(Sex)), data = grid) +
labs(y = "Prob. of Survival", x = "Fare", title = "Binomial Regression of Sex and Fare on Survived") +
theme(plot.title = element_text(size=10), axis.text = element_text(size=10), axis.title = element_text(size=10))
tidy(model)
library(gridExtra)
library(tidyverse)
library(modelr)
model_bin <- glm(Survived ~ Sex + Fare, data = data, family = binomial)
grid <-
data %>%
data_grid(Sex,Fare) %>%
add_predictions(model_bin, type = "response")
data %>%
ggplot() +
geom_point(aes(Fare, Survived, color=factor(Sex)), position='jitter') +
geom_line(aes(Fare, pred, color=factor(Sex)), data = grid) +
labs(y = "Prob. of Survival", x = "Fare", title = "Binomial Regression of Sex and Fare on Survived") +
theme(plot.title = element_text(size=10), axis.text = element_text(size=10), axis.title = element_text(size=10))
tidy(model)
param_mse <- mean(sum((model_bin$residuals)**2))
local_mse <- mean(sum(male_model_loess$residuals**2) + sum(fem_model_loess$residuals**2))
param_mse <- mean(sum((model_bin$residuals)**2))
local_mse <- mean(sum(male_model_loess$residuals**2) + sum(fem_model_loess$residuals**2))
param_mse
local_mse
source('~/Desktop/UBC/MDS/lab/DSCI_522_Group313/src/load_data.R')
source('~/Desktop/UBC/MDS/lab/DSCI_522_Group313/src/load_data.R')
source('~/Desktop/UBC/MDS/lab/DSCI_522_Group313/src/load_data.R')
setwd("~/Desktop/UBC/MDS/lab/DSCI_522_Group313")
source('~/Desktop/UBC/MDS/lab/DSCI_522_Group313/src/load_data.R')
dim(raw_df)
# Read Data from source
file <- read_csv("http://data.insideairbnb.com/canada/qc/quebec-city/2019-11-07/data/listings.csv.gz")
raw_df <- subset(file)
dim(raw_df)
source('~/Desktop/UBC/MDS/lab/DSCI_522_Group313/src/load_data.R')
dim(raw_df)
expect_equal(dim(data)[2], 106)
